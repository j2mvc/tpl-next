{"ast":null,"code":"// 查找modules目录下的所有目录js文件\nvar files = require.context(\"./modules\", true, /\\.js$/);\n\nvar modules = {};\n/**\n * 读取模块\n * @param ks\n * @param value\n * @param modules\n * @param i\n * @param len\n * @returns {*|{}}\n */\n\nexport function getModule(ks, value, modules, i, len) {\n  modules = modules || {};\n\n  if (i < len) {\n    if (i == len - 1) {\n      // 最后一层，赋值\n      modules[ks[len - 1]] = value;\n    } else {\n      var m = modules[ks[i]] || {};\n      modules[ks[i]] = m;\n      i++;\n      getModule(ks, value, m, i, len);\n    }\n  }\n\n  return modules;\n}\nfiles.keys().forEach(function (key) {\n  var k = key.replace(/(\\.\\/|\\.js)/g, '').replace(/(\\/)$/g, '');\n  var ks = k.split('/');\n\n  if (ks.length > 1) {\n    // 有子模块\n    getModule(ks, files(key).default, modules, 0, ks.length);\n  } else {\n    modules[k] = files(key).default;\n  }\n});\n/**\n * API调用方法：modules.common.ad.getList\n */\n\nexport default modules;","map":{"version":3,"sources":["/Users/wanjia/Documents/works/gitrepos/tpl/tpl-next/api/modules.js"],"names":["files","require","context","modules","getModule","ks","value","i","len","m","keys","forEach","key","k","replace","split","length","default"],"mappings":"AAEA;AACA,IAAMA,KAAK,GAAGC,OAAO,CAACC,OAAR,CAAgB,WAAhB,EAA6B,IAA7B,EAAoC,OAApC,CAAd;;AAEA,IAAMC,OAAO,GAAG,EAAhB;AAEA;;;;;;;;;;AASA,OAAO,SAASC,SAAT,CAAmBC,EAAnB,EAAsBC,KAAtB,EAA4BH,OAA5B,EAAoCI,CAApC,EAAsCC,GAAtC,EAA0C;AAC7CL,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AACA,MAAGI,CAAC,GAACC,GAAL,EAAS;AACL,QAAGD,CAAC,IAAIC,GAAG,GAAE,CAAb,EAAe;AACX;AACAL,MAAAA,OAAO,CAACE,EAAE,CAACG,GAAG,GAAE,CAAN,CAAH,CAAP,GAAsBF,KAAtB;AACH,KAHD,MAGK;AACD,UAAIG,CAAC,GAAGN,OAAO,CAAEE,EAAE,CAACE,CAAD,CAAJ,CAAP,IAAmB,EAA3B;AACAJ,MAAAA,OAAO,CAAEE,EAAE,CAACE,CAAD,CAAJ,CAAP,GAAkBE,CAAlB;AAEAF,MAAAA,CAAC;AAEDH,MAAAA,SAAS,CAACC,EAAD,EAAIC,KAAJ,EAAUG,CAAV,EAAYF,CAAZ,EAAcC,GAAd,CAAT;AACH;AACJ;;AACD,SAAOL,OAAP;AACH;AAEDH,KAAK,CAACU,IAAN,GAAaC,OAAb,CAAqB,UAAAC,GAAG,EAAI;AACxB,MAAIC,CAAC,GAAGD,GAAG,CAACE,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,EAAgCA,OAAhC,CAAwC,QAAxC,EAAiD,EAAjD,CAAR;AACA,MAAIT,EAAE,GAAGQ,CAAC,CAACE,KAAF,CAAQ,GAAR,CAAT;;AACA,MAAGV,EAAE,CAACW,MAAH,GAAY,CAAf,EAAiB;AACb;AACAZ,IAAAA,SAAS,CAACC,EAAD,EAAIL,KAAK,CAACY,GAAD,CAAL,CAAWK,OAAf,EAAuBd,OAAvB,EAA+B,CAA/B,EAAiCE,EAAE,CAACW,MAApC,CAAT;AACH,GAHD,MAGK;AACDb,IAAAA,OAAO,CAACU,CAAD,CAAP,GAAab,KAAK,CAACY,GAAD,CAAL,CAAWK,OAAxB;AACH;AACJ,CATD;AAUA;;;;AAGA,eAAed,OAAf","sourcesContent":["\n\n// 查找modules目录下的所有目录js文件\nconst files = require.context(\"./modules\", true,  /\\.js$/)\n\nconst modules = {}\n\n/**\n * 读取模块\n * @param ks\n * @param value\n * @param modules\n * @param i\n * @param len\n * @returns {*|{}}\n */\nexport function getModule(ks,value,modules,i,len){\n    modules = modules || {};\n    if(i<len){\n        if(i == len -1){\n            // 最后一层，赋值\n            modules[ks[len -1]] = value;\n        }else{\n            let m = modules[ ks[i]] || {}\n            modules[ ks[i]] = m;\n\n            i++\n\n            getModule(ks,value,m,i,len)\n        }\n    }\n    return modules;\n}\n\nfiles.keys().forEach(key => {\n    let k = key.replace(/(\\.\\/|\\.js)/g, '').replace(/(\\/)$/g,'');\n    let ks = k.split('/');\n    if(ks.length > 1){\n        // 有子模块\n        getModule(ks,files(key).default,modules,0,ks.length)\n    }else{\n        modules[k] = files(key).default\n    }\n})\n/**\n * API调用方法：modules.common.ad.getList\n */\nexport default modules\n"]},"metadata":{},"sourceType":"module"}