{"version":3,"file":"static/webpack/static/development/pages/content/list.js.ba798b86cddbec546aad.hot-update.js","sources":["webpack:///./pages/content/list.js"],"sourcesContent":["import React from 'react';\nimport Error from 'next/error';\nimport Link from \"next/link\";\nimport api from \"../../api\";\nimport \"../../assets/style.scss\"\n\nimport PageUI from '../../components/PageUI'\nimport HtmlHeader from \"../../components/HtmlHeader\";\nimport request from \"../../api/request\";\n\nimport Document, { Html, Head, Main, NextScript } from 'next/document';\n\nimport Router from 'next/router'\n\nRouter.beforePopState(({ url, as, options }) => {\n    // I only want to allow these two routes!\n    if (as !== \"/\" || as !== \"/other\") {\n        // Have SSR render bad routes as a 404.\n        window.location.href = as\n        return false\n    }\n\n    return true\n});\n\nconst loadData = async ()=>{\n    let props = {};\n\n    const res1 =  await api.request.get({\n        url: '/getCats',\n        params:{\n            moduleId:'201412290839325502'\n        },\n        cache:true\n    });\n\n    const res2 = await api.request.get({\n        url: '/getContentList',\n        params:{\n            catId:query.catId\n        },\n        cache:true\n    });\n\n    if(res1.code == 1)\n        props.catList = res1.data.list;\n    else{\n        props.catError = res1.error;\n    }\n    if(res2.code == 1){\n        props.contentList = res2.data.list;\n    }\n    else{\n        props.contentError = res2.error;\n    }\n\n    props.title = props.catList[0].name\n    props.keywords = \"文章列表关键词\"\n    props.description = \"这里是文章列表描述\"\n    console.log('list getInitialProps ended....')\n    return props;\n}\n\nclass Page  extends Document {\n\n    static async  getInitialProps({query}) {\n        console.log('list getInitialProps....')\n        return loadData();\n    }\n\n    render() {\n        console.log('start render....')\n        if (this.props.error) {\n            return <Error statusCode={this.props.error.code} />;\n        }\n        const ua = <div className='example'>Hello World!</div>\n        const items = this.props.contentList.map((item)=>\n            <li key={item.id}>\n            <Link  as={`/c/i/${item.id}`} href={{ pathname: '/content/info', query: { id: item.id }}} passHref>\n                 <a>{item.title}</a>\n                 </Link>\n            </li>)\n\n        return <div>\n            <HtmlHeader title={this.props.title} keywords={this.props.keywords} description={this.props.description}/>\n            <PageUI.Navbar list={this.props.catList}/>\n            <div>{ua}</div>\n            <div>{items}</div>\n        </div>\n    }\n}\n\nexport default Page;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AACA;AADA;AAGA;AALA;AACA;AAJA;AAGA;AAHA;AAAA;AAYA;AACA;AACA;AADA;AAGA;AALA;AACA;AAZA;AAWA;AAQA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAqCA;;;;;;;;;;;;;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;;;;;;;;;;;;AAxBA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AALA;AACA;AA4BA;;;;A","sourceRoot":""}